.. META INFORMATION OF TRANSLATION
..
..   $TranslationStatus: Done, waiting for revision. $
..   $OriginalRevision: 11298 $
..   $TranslationAuthors: Walter Cruz $
..
.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)
..
..   $HeadURL$
..   $LastChangedRevision$
..   $LastChangedBy$
..   $LastChangedDate$
..


.. _releases-1.0.2:

===================================
Notas de lançamento do Django 1.0.2
===================================

Bem vindo ao Django 1.0.2!

Essa é a segunda versão de "bugfixes" na série 1.0 do Django,
melhorando a estabilidade e performance da base de código do Django 1.0. Assim,
o Django 1.0.2 não contém novas features (e, segundo a nossa
:doc:`política de compatibilidade </misc/api-stability>`, mantém retro-compatibilidade com o Django
1.0.0), mas contém um número de correções e outras melhorias.
O Django 1.0.2 é uma atualização recomendada para qualquer
desenvolvimento ou deployment atualmente usando ou planejando usar o Django 1.0.


Correções e melhorias no Django 1.0.2
=====================================

A principal razão por trás desse release é corrigir um problema
no recentemente lançado Django 1.0.1; os scripts de empacotamento usados para o Django
1.0.1 omitiram alguns diretórios do pacote final, incluindo um diretório
requerido pelo ``django.contrib.gis`` e parte da suíte de testes unitários do
Django.

O Django 1.0.2 contém scripts de empacotamento atualizados, e o pacote
contém os diretórios omitifos no Django 1.0.1. Assim,
esse release contém todas as correções e melhorias do Django
1.0.1; veja :ref:`as notas de lançamento do Django 1.0.1 <releases-1.0.1>` para
detalhes.

Adicionamento, desde o Django 1.0.1 foram lançados:

* Atualizadas traduções para Hebreu e Dinamarquês foram adicionadas.

* O método padrão ``__repr__`` dos models do Django estão mais robustos ao lidar
  com dados Unicode mal formados vindos dos métodos ``__unicode__``; ao invés de
  lançar uma exceção em alguns casos, ``repr()`` irá conter uma string "[Bad
  Unicode data]" no lugar do Unicode inválido.

* Um bug envolvendo a interação da classe do Django ``SafeUnicode`` e o
  adaptador MySQL foi resolvido; Instâncias do ``SafeUnicode`` (gerados, por
  exemplo, por uma renderização de template) podem agora ser atribuidos a
  atributos de modelos e salvos no MySQL sem a necessidade de intermediação
  explicita de transformações para ``unicode``.

* Um bug que afetava a filtragem de ``DateField`` anulavél no SQLite foi
  resolvido.

* Várias atualizações e melhorias foram feitas na documentação do Django.

